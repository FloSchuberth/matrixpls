% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrixpls.plsc.R
\name{estimator.PLScLoadings}
\alias{estimator.PLScLoadings}
\title{Parameter estimation with an adaptation of PLSc algorithm}
\usage{
estimator.PLScLoadings(S, model, W, ...)
}
\arguments{
\item{S}{Covariance matrix of the data.}

\item{model}{There are two options for this argument: 1. lavaan script or lavaan parameter
table, or 2. a list containing three matrices
\code{inner}, \code{reflective}, and \code{formative} defining the free regression paths
in the model.}

\item{W}{Weight matrix, where the indicators are on colums and composites are on the rows.}

\item{...}{All other arguments are passed through to \code{weightFunction} and \code{parameterEstimator}.}
}
\value{
A named vector of parameter estimates.
}
\description{
Estimates the model parameters with an adapted version of Dijkstra's (2011) PLSc. The 
parameters between latent variables are estimated using two-stages least squares
estimation using a composite covariance matrix that has been disattenuated with estimated
composite reliabilities.
}
\details{
\code{params.plsc} estimates the statistical model described by \code{model} with the
following steps. If \code{model} is not in the native format, it is converted to the native
format containing matrices \code{inner}, \code{reflective}, and \code{formative}. The
weights \code{W} and the data covariance matrix \code{S} are used to calculate the composite
covariance matrix \code{C} and the indicator-composite covariance matrix \code{IC}.

\code{C} is then disattenuated. The reliability estimates used
in the dissattenuation process are calculated by using Dijkstra's (2011)
correction or with a separate factor analysis for each indicator block. Indicators that are
used in a composite but are not specified as reflective indicators for the
latent variable that the composite approximates are assumed to be perfectly
reliable.

The disattenuated \code{C} is used to estimate the the inner part of the model
with separate OLS regressions in the same way as in \code{\link{params.regression}}.
This differs from Dijkstra's (2011) PLSc estimator that uses
2SLS. The reason for not using 2SLS is that PLS is commonly used with models that
do not contain a sufficient number of exogenous variables that could be used 
as instruments in the 2SLS estimation.

The results from the disattenuation process are used as estimates of the \code{reflective}
part of the model and the \code{formative} part of the model estimated with separate
OLS regressions using the \code{S} and \code{IC} matrices.

Those elements of teh indicator-composite covariance matrix \code{IC} that correspond
to factor loadings are replaced with the factor loading estimates.

The dissattenuation code for Dijkstra's method is adapted from Huang (2013), which is based on
Dijkstra (2011).

\code{"dijkstra"}
will use the correction presented by Dijkstra (2011), where the PLS estimates of the 
factor loadings for a latent variable are multiplied with a scalar \code{a}, which is 
calculated by a simple formula that approximately minimizes squared residual covariances
of the factor model. \code{minres}, \code{wls}, \code{gls}, \code{pa}, and \code{ml}
will use a factor analysis and passing this parameter through to \code{\link[psych]{fa}}.
\code{"cfa"} estimates a maximum likelihood confirmatory factor analysis with \code{\link[lavaan]{lavaan}}
}
\examples{
# Run the educaiton example from the book

# Sanchez, G. (2013) PLS Path Modeling with R
# Trowchez Editions. Berkeley, 2013. 
# http://www.gastonsanchez.com/PLS Path Modeling with R.pdf

education <- read.csv("http://www.gastonsanchez.com/education.csv")

Support <- c(0, 0, 0, 0, 0, 0)
Advising <- c(0, 0, 0, 0, 0, 0)
Tutoring <- c(0, 0, 0, 0, 0, 0)
Value <- c(1, 1, 1, 0, 0, 0)
# Omit two paths (compared to teh model in the book) to achieve 
# identification of the 2SLS analysis
Satisfaction <- c(0, 0, 1, 1, 0, 0)
Loyalty <- c(0, 0, 0, 0, 1, 0)

inner <- rbind(Support, Advising, Tutoring, Value, Satisfaction, Loyalty)


reflective <- diag(6)[c(rep(1,4),
                        rep(2,4),
                        rep(3,4),
                        rep(4,4),
                        rep(5,3),
                        rep(6,4)),]
formative <- matrix(0, 6, 23)

colnames(inner) <- colnames(reflective) <- rownames(formative) <- rownames(inner)
rownames(reflective) <- colnames(formative) <- colnames(education)[2:24]

model <- list(inner = inner,
              reflective = reflective,
              formative = formative)

# Reverse code two variables
education[,c("sup.under","loy.asha")] <- - education[,c("sup.under","loy.asha")]

S <- cor(education[,2:24])

# PLSc with OLS regression

plsc.res1 <- matrixpls(S,model,
                      disattenuate = TRUE,
                      parametersReflective = estimator.PLScLoadings)

# PLSc with 2SLS regresssion

plsc.res2 <- matrixpls(S,model,
                      disattenuate = TRUE,
                      parametersReflective = estimator.PLScLoadings,
                      parametersInner = estimator.tsls)


# Disattenuated regression with unit-weighted scales and exploratory factor analysis
# reliability estimates (with unconstrained MINRES estimator)

plsc.res3 <- matrixpls(S,model,
                       disattenuate = TRUE,
                       weightFunction = weight.fixed,
                       parametersReflective = estimator.EFALoadings)

# Disattenuated GSCA with 2SLS regression after disattenuated based on 
# confirmatory factor analysis reliability estimates


plsc.res4 <- matrixpls(S,model,
                       disattenuate = TRUE,
                       innerEstimator = inner.GSCA,
                       outerEstimators = outer.GSCA,
                       parametersInner = estimator.tsls,
                       parametersReflective = estimator.CFALoadings)


# Compare the results

cbind(PLSc = plsc.res1, PLSc_2sls = plsc.res2, 
      DR = plsc.res3, GSCAc = plsc.res4)

# Compare the reliability estimates

cbind(PLSc = attr(plsc.res1,"Q"), PLSc_2sls = attr(plsc.res2,"Q"), 
      DR = attr(plsc.res3,"Q"), GSCAc = attr(plsc.res4,"Q"))
}
\author{
Mikko Rönkkö, Wenjing Huang, Theo Dijkstra
}
\references{
Huang, W. (2013). PLSe: Efficient Estimators and Tests for Partial Least Squares (Doctoral dissertation). University of California, Los Angeles.
Dijkstra, T. K. (2011). Consistent Partial Least Squares estimators for linear and polynomial factor models. A report of a belated, serious and not even unsuccessful attempt. Comments are invited. Retrieved from http://www.rug.nl/staff/t.k.dijkstra/consistent-pls-estimators.pdf
}
\seealso{
Other parameter estimators: \code{\link{estimator.CFALoadings}},
  \code{\link{estimator.EFALoadings}},
  \code{\link{params.regression}}
}

